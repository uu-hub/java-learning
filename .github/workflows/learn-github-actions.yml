name: Create PR and Merge Feature Branch
on:
  push:
    branches:
      - feature/*

jobs:
  create-pr-and-merge:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: master
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install Git & jq
      run: |
        sudo apt-get update
        sudo apt-get install -y git
        sudo apt-get install -y jq
    - name: Create PR and add approvers
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git fetch origin feature/update_boot_version
        git checkout feature/update_boot_version
        pr_info=$(curl -H "Authorization: token $GH_TOKEN" -X POST -d '{"title":"Merge feature branch to master","body":"This PR merges the feature branch to master","base":"master","head":"feature/update_boot_version","required_reviewers":["zmsoft","zbc0512"]}' https://api.github.com/repos/$GITHUB_REPOSITORY/pulls)
        echo $pr_info
        pr_number=$(echo $pr_info | jq -r '.number')
        echo $pr_number
        echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV
      env:
        GITHUB_REF: feature/update_boot_version
        GH_TOKEN: ${{ github.token }}
      id: create-pr
    - name: Wait for approval
      run: |
        while true; do
          echo $PR_NUMBER
          status_info=$(curl -H "Authorization: token $GH_TOKEN" -s https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER/reviews)
          echo $status_info
          status=$(echo $status_info | jq -r '.[] | select(.state == "APPROVED")')
          echo $status
          if [ "$status" != "" ]; then
            break
          fi
          sleep 60
        done
      env:
        GITHUB_REF: feature/update_boot_version
        GH_TOKEN: ${{ github.token }}
    - name: Merge PR
      run: |
        sleep 5
        git checkout master && git fetch origin master && git merge  feature/update_boot_version
        git push origin master
        
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
